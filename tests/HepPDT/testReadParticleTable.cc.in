// $Id: testReadParticleTable.cc.in,v 1.5 2008/10/24 16:41:40 garren Exp $
// ----------------------------------------------------------------------
// testReadParticleTable.cc
//
// read particle.tbl and write it out
//
// ----------------------------------------------------------------------

#include <fstream>

#include "HepPDT/defs.h"
#include "HepPDT/TableBuilder.hh"
#include "HepPDT/ParticleDataTable.hh"

int main()
{
    const char infile[] = "@top_srcdir@/data/particle.tbl";
    const char outfile[] = "testReadParticleTable.out";
    // open input files
    std::ifstream pdfile( infile );
    if( !pdfile ) { 
      std::cerr << "cannot open " << infile << std::endl;
      exit(-1);
    }
    // construct empty PDT
    HepPDT::ParticleDataTable datacol( "Generic Particle Table" );
    {
        // Construct table builder
        HepPDT::TableBuilder  tb(datacol);
	// read the input - put as many here as you want
        // bool  addParticleTable( std::istream&, TableBuilder&,
        //                         bool validate = false );
	// where:  validate=true => verify that the ParticleID is valid
        if( !addParticleTable( pdfile, tb, true ) ) { 
	    std::cout << "error reading EvtGen pdt file " << std::endl; 
	}
    }	// the tb destructor fills datacol
    // open the output stream
    std::ofstream wfile( outfile );
    if( !wfile ) { 
      std::cerr << "cannot open " << outfile << std::endl;
      exit(-1);
    }
    // write the data table
    datacol.writeParticleData(wfile);
    // try some heavy ions
    wfile << std::endl;
    wfile << std::endl;
    HepPDT::ParticleData * pd;
    pd=datacol.particle(HepPDT::ParticleID(1000020040));
    if(pd) pd->write(wfile);
    pd=datacol.particle(HepPDT::ParticleID(1000050110));
    if(pd) pd->write(wfile);

    // check isStable
    const char outfile3[] = "testReadParticleTableStatus.out";
    std::ofstream wpdt3( outfile3 );
    if( !wpdt3 ) { 
      std::cerr << "cannot open " << outfile3 << std::endl;
      exit(-1);
    }
    datacol.writeParticleStatus(wpdt3);

    return 0;
}
